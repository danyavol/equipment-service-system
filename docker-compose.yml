services:
  server:
    container_name: server-container
    restart: always
    build: 
      context: server/
      dockerfile: Dockerfile.dev
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    volumes:
      - ./server:/home/ess/server
      - ./server/node_modules:/home/ess/server/node_modules
    env_file:
      - .env
    depends_on:
      - database

  client:
    container_name: client-container
    restart: always
    build: 
      context: client/
      dockerfile: Dockerfile.dev
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
    volumes:
      - ./client:/home/ess/client
      - ./client/node_modules:/home/ess/client/node_modules
    env_file:
      - .env

  database:
    container_name: postgres-container
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - db-data:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - 5050:80
    volumes:
     - pgadmin-data:/var/lib/pgadmin

  # Use the following hostname to connect to porstgres via pgadmin:
  # host.docker.internal

volumes:
  db-data:
  pgadmin-data:
